// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hpsd081.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Guard_Emulator {

  /// <summary>Holder for reflection information generated from hpsd081.proto</summary>
  public static partial class Hpsd081Reflection {

    #region Descriptor
    /// <summary>File descriptor for hpsd081.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Hpsd081Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1ocHNkMDgxLnByb3RvIrgDCgtIcHNkTWVzc2FnZRIYChBwcm90b2NvbF92",
            "ZXJzaW9uGAEgASgFEhcKD3NlcXVlbmNlX251bWJlchgCIAEoBRIRCgl0aW1l",
            "c3RhbXAYAyABKAMSLgoMbWVzc2FnZV90eXBlGAQgASgOMhguSHBzZE1lc3Nh",
            "Z2UuTWVzc2FnZVR5cGUSJgoOc2Vzc2lvbl9zdGF0dXMYBSABKAsyDi5TZXNz",
            "aW9uU3RhdHVzEiQKDW9iamVjdF9jcmVhdGUYBiABKAsyDS5PYmplY3RDcmVh",
            "dGUSJAoNb2JqZWN0X3VwZGF0ZRgHIAEoCzINLk9iamVjdFVwZGF0ZRIkCg1v",
            "YmplY3RfZGVsZXRlGAggASgLMg0uT2JqZWN0RGVsZXRlEiEKC2ludGVyYWN0",
            "aW9uGAkgASgLMgwuSW50ZXJhY3Rpb24idgoLTWVzc2FnZVR5cGUSCQoFRU1Q",
            "VFkQABISCg5TRVNTSU9OX1NUQVRVUxABEhEKDU9CSkVDVF9DUkVBVEUQAhIR",
            "Cg1PQkpFQ1RfVVBEQVRFEAMSEQoNT0JKRUNUX0RFTEVURRAEEg8KC0lOVEVS",
            "QUNUSU9OEAUiNQoNU2Vzc2lvblN0YXR1cxIOCgZhY3RpdmUYASABKAgSFAoM",
            "c2Vzc2lvbl9uYW1lGAIgASgJIikKCk5hbWVkVmFsdWUSDAoEbmFtZRgBIAEo",
            "CRINCgV2YWx1ZRgCIAEoDCJxCgxPYmplY3RDcmVhdGUSGgoScHJvZHVjaW5n",
            "X2ZlZGVyYXRlGAEgASgJEhkKEW9iamVjdF9jbGFzc19uYW1lGAIgASgJEhMK",
            "C2luc3RhbmNlX2lkGAMgASgJEhUKDWluc3RhbmNlX25hbWUYBCABKAkilgEK",
            "DE9iamVjdFVwZGF0ZRIaChJwcm9kdWNpbmdfZmVkZXJhdGUYASABKAkSGQoR",
            "b2JqZWN0X2NsYXNzX25hbWUYAiABKAkSEwoLaW5zdGFuY2VfaWQYAyABKAkS",
            "HwoKYXR0cmlidXRlcxgEIAMoCzILLk5hbWVkVmFsdWUSGQoRdXNlcl9zdXBw",
            "bGllZF90YWcYBSABKAwidQoMT2JqZWN0RGVsZXRlEhoKEnByb2R1Y2luZ19m",
            "ZWRlcmF0ZRgBIAEoCRIZChFvYmplY3RfY2xhc3NfbmFtZRgCIAEoCRITCgtp",
            "bnN0YW5jZV9pZBgDIAEoCRIZChF1c2VyX3N1cHBsaWVkX3RhZxgEIAEoDCKF",
            "AQoLSW50ZXJhY3Rpb24SGgoScHJvZHVjaW5nX2ZlZGVyYXRlGAEgASgJEh4K",
            "FmludGVyYWN0aW9uX2NsYXNzX25hbWUYAiABKAkSHwoKcGFyYW1ldGVycxgD",
            "IAMoCzILLk5hbWVkVmFsdWUSGQoRdXNlcl9zdXBwbGllZF90YWcYBCABKAxC",
            "EaoCDkd1YXJkX0VtdWxhdG9yYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Guard_Emulator.HpsdMessage), global::Guard_Emulator.HpsdMessage.Parser, new[]{ "ProtocolVersion", "SequenceNumber", "Timestamp", "MessageType", "SessionStatus", "ObjectCreate", "ObjectUpdate", "ObjectDelete", "Interaction" }, null, new[]{ typeof(global::Guard_Emulator.HpsdMessage.Types.MessageType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Guard_Emulator.SessionStatus), global::Guard_Emulator.SessionStatus.Parser, new[]{ "Active", "SessionName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Guard_Emulator.NamedValue), global::Guard_Emulator.NamedValue.Parser, new[]{ "Name", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Guard_Emulator.ObjectCreate), global::Guard_Emulator.ObjectCreate.Parser, new[]{ "ProducingFederate", "ObjectClassName", "InstanceId", "InstanceName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Guard_Emulator.ObjectUpdate), global::Guard_Emulator.ObjectUpdate.Parser, new[]{ "ProducingFederate", "ObjectClassName", "InstanceId", "Attributes", "UserSuppliedTag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Guard_Emulator.ObjectDelete), global::Guard_Emulator.ObjectDelete.Parser, new[]{ "ProducingFederate", "ObjectClassName", "InstanceId", "UserSuppliedTag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Guard_Emulator.Interaction), global::Guard_Emulator.Interaction.Parser, new[]{ "ProducingFederate", "InteractionClassName", "Parameters", "UserSuppliedTag" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class HpsdMessage : pb::IMessage<HpsdMessage> {
    private static readonly pb::MessageParser<HpsdMessage> _parser = new pb::MessageParser<HpsdMessage>(() => new HpsdMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HpsdMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Guard_Emulator.Hpsd081Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HpsdMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HpsdMessage(HpsdMessage other) : this() {
      protocolVersion_ = other.protocolVersion_;
      sequenceNumber_ = other.sequenceNumber_;
      timestamp_ = other.timestamp_;
      messageType_ = other.messageType_;
      SessionStatus = other.sessionStatus_ != null ? other.SessionStatus.Clone() : null;
      ObjectCreate = other.objectCreate_ != null ? other.ObjectCreate.Clone() : null;
      ObjectUpdate = other.objectUpdate_ != null ? other.ObjectUpdate.Clone() : null;
      ObjectDelete = other.objectDelete_ != null ? other.ObjectDelete.Clone() : null;
      Interaction = other.interaction_ != null ? other.Interaction.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HpsdMessage Clone() {
      return new HpsdMessage(this);
    }

    /// <summary>Field number for the "protocol_version" field.</summary>
    public const int ProtocolVersionFieldNumber = 1;
    private int protocolVersion_;
    /// <summary>
    /// Must be set to 81 for version 0.81
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProtocolVersion {
      get { return protocolVersion_; }
      set {
        protocolVersion_ = value;
      }
    }

    /// <summary>Field number for the "sequence_number" field.</summary>
    public const int SequenceNumberFieldNumber = 2;
    private int sequenceNumber_;
    /// <summary>
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SequenceNumber {
      get { return sequenceNumber_; }
      set {
        sequenceNumber_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private long timestamp_;
    /// <summary>
    /// Milliseconds [ms] of UTC time since Unix epoch, 1970-01-01 00:00:00 UTC
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "message_type" field.</summary>
    public const int MessageTypeFieldNumber = 4;
    private global::Guard_Emulator.HpsdMessage.Types.MessageType messageType_ = 0;
    /// <summary>
    /// The corresponding message type below must be valid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Guard_Emulator.HpsdMessage.Types.MessageType MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "session_status" field.</summary>
    public const int SessionStatusFieldNumber = 5;
    private global::Guard_Emulator.SessionStatus sessionStatus_;
    /// <summary>
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Guard_Emulator.SessionStatus SessionStatus {
      get { return sessionStatus_; }
      set {
        sessionStatus_ = value;
      }
    }

    /// <summary>Field number for the "object_create" field.</summary>
    public const int ObjectCreateFieldNumber = 6;
    private global::Guard_Emulator.ObjectCreate objectCreate_;
    /// <summary>
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Guard_Emulator.ObjectCreate ObjectCreate {
      get { return objectCreate_; }
      set {
        objectCreate_ = value;
      }
    }

    /// <summary>Field number for the "object_update" field.</summary>
    public const int ObjectUpdateFieldNumber = 7;
    private global::Guard_Emulator.ObjectUpdate objectUpdate_;
    /// <summary>
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Guard_Emulator.ObjectUpdate ObjectUpdate {
      get { return objectUpdate_; }
      set {
        objectUpdate_ = value;
      }
    }

    /// <summary>Field number for the "object_delete" field.</summary>
    public const int ObjectDeleteFieldNumber = 8;
    private global::Guard_Emulator.ObjectDelete objectDelete_;
    /// <summary>
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Guard_Emulator.ObjectDelete ObjectDelete {
      get { return objectDelete_; }
      set {
        objectDelete_ = value;
      }
    }

    /// <summary>Field number for the "interaction" field.</summary>
    public const int InteractionFieldNumber = 9;
    private global::Guard_Emulator.Interaction interaction_;
    /// <summary>
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Guard_Emulator.Interaction Interaction {
      get { return interaction_; }
      set {
        interaction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HpsdMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HpsdMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProtocolVersion != other.ProtocolVersion) return false;
      if (SequenceNumber != other.SequenceNumber) return false;
      if (Timestamp != other.Timestamp) return false;
      if (MessageType != other.MessageType) return false;
      if (!object.Equals(SessionStatus, other.SessionStatus)) return false;
      if (!object.Equals(ObjectCreate, other.ObjectCreate)) return false;
      if (!object.Equals(ObjectUpdate, other.ObjectUpdate)) return false;
      if (!object.Equals(ObjectDelete, other.ObjectDelete)) return false;
      if (!object.Equals(Interaction, other.Interaction)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProtocolVersion != 0) hash ^= ProtocolVersion.GetHashCode();
      if (SequenceNumber != 0) hash ^= SequenceNumber.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (MessageType != 0) hash ^= MessageType.GetHashCode();
      if (sessionStatus_ != null) hash ^= SessionStatus.GetHashCode();
      if (objectCreate_ != null) hash ^= ObjectCreate.GetHashCode();
      if (objectUpdate_ != null) hash ^= ObjectUpdate.GetHashCode();
      if (objectDelete_ != null) hash ^= ObjectDelete.GetHashCode();
      if (interaction_ != null) hash ^= Interaction.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProtocolVersion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ProtocolVersion);
      }
      if (SequenceNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SequenceNumber);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (MessageType != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) MessageType);
      }
      if (sessionStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SessionStatus);
      }
      if (objectCreate_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ObjectCreate);
      }
      if (objectUpdate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ObjectUpdate);
      }
      if (objectDelete_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ObjectDelete);
      }
      if (interaction_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Interaction);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProtocolVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProtocolVersion);
      }
      if (SequenceNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SequenceNumber);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (MessageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MessageType);
      }
      if (sessionStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionStatus);
      }
      if (objectCreate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectCreate);
      }
      if (objectUpdate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectUpdate);
      }
      if (objectDelete_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectDelete);
      }
      if (interaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Interaction);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HpsdMessage other) {
      if (other == null) {
        return;
      }
      if (other.ProtocolVersion != 0) {
        ProtocolVersion = other.ProtocolVersion;
      }
      if (other.SequenceNumber != 0) {
        SequenceNumber = other.SequenceNumber;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.MessageType != 0) {
        MessageType = other.MessageType;
      }
      if (other.sessionStatus_ != null) {
        if (sessionStatus_ == null) {
          sessionStatus_ = new global::Guard_Emulator.SessionStatus();
        }
        SessionStatus.MergeFrom(other.SessionStatus);
      }
      if (other.objectCreate_ != null) {
        if (objectCreate_ == null) {
          objectCreate_ = new global::Guard_Emulator.ObjectCreate();
        }
        ObjectCreate.MergeFrom(other.ObjectCreate);
      }
      if (other.objectUpdate_ != null) {
        if (objectUpdate_ == null) {
          objectUpdate_ = new global::Guard_Emulator.ObjectUpdate();
        }
        ObjectUpdate.MergeFrom(other.ObjectUpdate);
      }
      if (other.objectDelete_ != null) {
        if (objectDelete_ == null) {
          objectDelete_ = new global::Guard_Emulator.ObjectDelete();
        }
        ObjectDelete.MergeFrom(other.ObjectDelete);
      }
      if (other.interaction_ != null) {
        if (interaction_ == null) {
          interaction_ = new global::Guard_Emulator.Interaction();
        }
        Interaction.MergeFrom(other.Interaction);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ProtocolVersion = input.ReadInt32();
            break;
          }
          case 16: {
            SequenceNumber = input.ReadInt32();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 32: {
            messageType_ = (global::Guard_Emulator.HpsdMessage.Types.MessageType) input.ReadEnum();
            break;
          }
          case 42: {
            if (sessionStatus_ == null) {
              sessionStatus_ = new global::Guard_Emulator.SessionStatus();
            }
            input.ReadMessage(sessionStatus_);
            break;
          }
          case 50: {
            if (objectCreate_ == null) {
              objectCreate_ = new global::Guard_Emulator.ObjectCreate();
            }
            input.ReadMessage(objectCreate_);
            break;
          }
          case 58: {
            if (objectUpdate_ == null) {
              objectUpdate_ = new global::Guard_Emulator.ObjectUpdate();
            }
            input.ReadMessage(objectUpdate_);
            break;
          }
          case 66: {
            if (objectDelete_ == null) {
              objectDelete_ = new global::Guard_Emulator.ObjectDelete();
            }
            input.ReadMessage(objectDelete_);
            break;
          }
          case 74: {
            if (interaction_ == null) {
              interaction_ = new global::Guard_Emulator.Interaction();
            }
            input.ReadMessage(interaction_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the HpsdMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum MessageType {
        [pbr::OriginalName("EMPTY")] Empty = 0,
        [pbr::OriginalName("SESSION_STATUS")] SessionStatus = 1,
        [pbr::OriginalName("OBJECT_CREATE")] ObjectCreate = 2,
        [pbr::OriginalName("OBJECT_UPDATE")] ObjectUpdate = 3,
        [pbr::OriginalName("OBJECT_DELETE")] ObjectDelete = 4,
        [pbr::OriginalName("INTERACTION")] Interaction = 5,
      }

    }
    #endregion

  }

  public sealed partial class SessionStatus : pb::IMessage<SessionStatus> {
    private static readonly pb::MessageParser<SessionStatus> _parser = new pb::MessageParser<SessionStatus>(() => new SessionStatus());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SessionStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Guard_Emulator.Hpsd081Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionStatus(SessionStatus other) : this() {
      active_ = other.active_;
      sessionName_ = other.sessionName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionStatus Clone() {
      return new SessionStatus(this);
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 1;
    private bool active_;
    /// <summary>
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Active {
      get { return active_; }
      set {
        active_ = value;
      }
    }

    /// <summary>Field number for the "session_name" field.</summary>
    public const int SessionNameFieldNumber = 2;
    private string sessionName_ = "";
    /// <summary>
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionName {
      get { return sessionName_; }
      set {
        sessionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SessionStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SessionStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Active != other.Active) return false;
      if (SessionName != other.SessionName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Active != false) hash ^= Active.GetHashCode();
      if (SessionName.Length != 0) hash ^= SessionName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Active != false) {
        output.WriteRawTag(8);
        output.WriteBool(Active);
      }
      if (SessionName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Active != false) {
        size += 1 + 1;
      }
      if (SessionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SessionStatus other) {
      if (other == null) {
        return;
      }
      if (other.Active != false) {
        Active = other.Active;
      }
      if (other.SessionName.Length != 0) {
        SessionName = other.SessionName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Active = input.ReadBool();
            break;
          }
          case 18: {
            SessionName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// NamedValue, not used directly
  /// </summary>
  public sealed partial class NamedValue : pb::IMessage<NamedValue> {
    private static readonly pb::MessageParser<NamedValue> _parser = new pb::MessageParser<NamedValue>(() => new NamedValue());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NamedValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Guard_Emulator.Hpsd081Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NamedValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NamedValue(NamedValue other) : this() {
      name_ = other.name_;
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NamedValue Clone() {
      return new NamedValue(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NamedValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NamedValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NamedValue other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ObjectCreate : pb::IMessage<ObjectCreate> {
    private static readonly pb::MessageParser<ObjectCreate> _parser = new pb::MessageParser<ObjectCreate>(() => new ObjectCreate());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectCreate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Guard_Emulator.Hpsd081Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectCreate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectCreate(ObjectCreate other) : this() {
      producingFederate_ = other.producingFederate_;
      objectClassName_ = other.objectClassName_;
      instanceId_ = other.instanceId_;
      instanceName_ = other.instanceName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectCreate Clone() {
      return new ObjectCreate(this);
    }

    /// <summary>Field number for the "producing_federate" field.</summary>
    public const int ProducingFederateFieldNumber = 1;
    private string producingFederate_ = "";
    /// <summary>
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProducingFederate {
      get { return producingFederate_; }
      set {
        producingFederate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "object_class_name" field.</summary>
    public const int ObjectClassNameFieldNumber = 2;
    private string objectClassName_ = "";
    /// <summary>
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ObjectClassName {
      get { return objectClassName_; }
      set {
        objectClassName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance_id" field.</summary>
    public const int InstanceIdFieldNumber = 3;
    private string instanceId_ = "";
    /// <summary>
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance_name" field.</summary>
    public const int InstanceNameFieldNumber = 4;
    private string instanceName_ = "";
    /// <summary>
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstanceName {
      get { return instanceName_; }
      set {
        instanceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectCreate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectCreate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProducingFederate != other.ProducingFederate) return false;
      if (ObjectClassName != other.ObjectClassName) return false;
      if (InstanceId != other.InstanceId) return false;
      if (InstanceName != other.InstanceName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProducingFederate.Length != 0) hash ^= ProducingFederate.GetHashCode();
      if (ObjectClassName.Length != 0) hash ^= ObjectClassName.GetHashCode();
      if (InstanceId.Length != 0) hash ^= InstanceId.GetHashCode();
      if (InstanceName.Length != 0) hash ^= InstanceName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProducingFederate.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProducingFederate);
      }
      if (ObjectClassName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ObjectClassName);
      }
      if (InstanceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InstanceId);
      }
      if (InstanceName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(InstanceName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProducingFederate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProducingFederate);
      }
      if (ObjectClassName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ObjectClassName);
      }
      if (InstanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceId);
      }
      if (InstanceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectCreate other) {
      if (other == null) {
        return;
      }
      if (other.ProducingFederate.Length != 0) {
        ProducingFederate = other.ProducingFederate;
      }
      if (other.ObjectClassName.Length != 0) {
        ObjectClassName = other.ObjectClassName;
      }
      if (other.InstanceId.Length != 0) {
        InstanceId = other.InstanceId;
      }
      if (other.InstanceName.Length != 0) {
        InstanceName = other.InstanceName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProducingFederate = input.ReadString();
            break;
          }
          case 18: {
            ObjectClassName = input.ReadString();
            break;
          }
          case 26: {
            InstanceId = input.ReadString();
            break;
          }
          case 34: {
            InstanceName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ObjectUpdate : pb::IMessage<ObjectUpdate> {
    private static readonly pb::MessageParser<ObjectUpdate> _parser = new pb::MessageParser<ObjectUpdate>(() => new ObjectUpdate());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Guard_Emulator.Hpsd081Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectUpdate(ObjectUpdate other) : this() {
      producingFederate_ = other.producingFederate_;
      objectClassName_ = other.objectClassName_;
      instanceId_ = other.instanceId_;
      attributes_ = other.attributes_.Clone();
      userSuppliedTag_ = other.userSuppliedTag_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectUpdate Clone() {
      return new ObjectUpdate(this);
    }

    /// <summary>Field number for the "producing_federate" field.</summary>
    public const int ProducingFederateFieldNumber = 1;
    private string producingFederate_ = "";
    /// <summary>
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProducingFederate {
      get { return producingFederate_; }
      set {
        producingFederate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "object_class_name" field.</summary>
    public const int ObjectClassNameFieldNumber = 2;
    private string objectClassName_ = "";
    /// <summary>
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ObjectClassName {
      get { return objectClassName_; }
      set {
        objectClassName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance_id" field.</summary>
    public const int InstanceIdFieldNumber = 3;
    private string instanceId_ = "";
    /// <summary>
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Guard_Emulator.NamedValue> _repeated_attributes_codec
        = pb::FieldCodec.ForMessage(34, global::Guard_Emulator.NamedValue.Parser);
    private readonly pbc::RepeatedField<global::Guard_Emulator.NamedValue> attributes_ = new pbc::RepeatedField<global::Guard_Emulator.NamedValue>();
    /// <summary>
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Guard_Emulator.NamedValue> Attributes {
      get { return attributes_; }
    }

    /// <summary>Field number for the "user_supplied_tag" field.</summary>
    public const int UserSuppliedTagFieldNumber = 5;
    private pb::ByteString userSuppliedTag_ = pb::ByteString.Empty;
    /// <summary>
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString UserSuppliedTag {
      get { return userSuppliedTag_; }
      set {
        userSuppliedTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProducingFederate != other.ProducingFederate) return false;
      if (ObjectClassName != other.ObjectClassName) return false;
      if (InstanceId != other.InstanceId) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      if (UserSuppliedTag != other.UserSuppliedTag) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProducingFederate.Length != 0) hash ^= ProducingFederate.GetHashCode();
      if (ObjectClassName.Length != 0) hash ^= ObjectClassName.GetHashCode();
      if (InstanceId.Length != 0) hash ^= InstanceId.GetHashCode();
      hash ^= attributes_.GetHashCode();
      if (UserSuppliedTag.Length != 0) hash ^= UserSuppliedTag.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProducingFederate.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProducingFederate);
      }
      if (ObjectClassName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ObjectClassName);
      }
      if (InstanceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InstanceId);
      }
      attributes_.WriteTo(output, _repeated_attributes_codec);
      if (UserSuppliedTag.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(UserSuppliedTag);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProducingFederate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProducingFederate);
      }
      if (ObjectClassName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ObjectClassName);
      }
      if (InstanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceId);
      }
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      if (UserSuppliedTag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(UserSuppliedTag);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectUpdate other) {
      if (other == null) {
        return;
      }
      if (other.ProducingFederate.Length != 0) {
        ProducingFederate = other.ProducingFederate;
      }
      if (other.ObjectClassName.Length != 0) {
        ObjectClassName = other.ObjectClassName;
      }
      if (other.InstanceId.Length != 0) {
        InstanceId = other.InstanceId;
      }
      attributes_.Add(other.attributes_);
      if (other.UserSuppliedTag.Length != 0) {
        UserSuppliedTag = other.UserSuppliedTag;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProducingFederate = input.ReadString();
            break;
          }
          case 18: {
            ObjectClassName = input.ReadString();
            break;
          }
          case 26: {
            InstanceId = input.ReadString();
            break;
          }
          case 34: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
          case 42: {
            UserSuppliedTag = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ObjectDelete : pb::IMessage<ObjectDelete> {
    private static readonly pb::MessageParser<ObjectDelete> _parser = new pb::MessageParser<ObjectDelete>(() => new ObjectDelete());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectDelete> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Guard_Emulator.Hpsd081Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectDelete() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectDelete(ObjectDelete other) : this() {
      producingFederate_ = other.producingFederate_;
      objectClassName_ = other.objectClassName_;
      instanceId_ = other.instanceId_;
      userSuppliedTag_ = other.userSuppliedTag_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectDelete Clone() {
      return new ObjectDelete(this);
    }

    /// <summary>Field number for the "producing_federate" field.</summary>
    public const int ProducingFederateFieldNumber = 1;
    private string producingFederate_ = "";
    /// <summary>
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProducingFederate {
      get { return producingFederate_; }
      set {
        producingFederate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "object_class_name" field.</summary>
    public const int ObjectClassNameFieldNumber = 2;
    private string objectClassName_ = "";
    /// <summary>
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ObjectClassName {
      get { return objectClassName_; }
      set {
        objectClassName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance_id" field.</summary>
    public const int InstanceIdFieldNumber = 3;
    private string instanceId_ = "";
    /// <summary>
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_supplied_tag" field.</summary>
    public const int UserSuppliedTagFieldNumber = 4;
    private pb::ByteString userSuppliedTag_ = pb::ByteString.Empty;
    /// <summary>
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString UserSuppliedTag {
      get { return userSuppliedTag_; }
      set {
        userSuppliedTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectDelete);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectDelete other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProducingFederate != other.ProducingFederate) return false;
      if (ObjectClassName != other.ObjectClassName) return false;
      if (InstanceId != other.InstanceId) return false;
      if (UserSuppliedTag != other.UserSuppliedTag) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProducingFederate.Length != 0) hash ^= ProducingFederate.GetHashCode();
      if (ObjectClassName.Length != 0) hash ^= ObjectClassName.GetHashCode();
      if (InstanceId.Length != 0) hash ^= InstanceId.GetHashCode();
      if (UserSuppliedTag.Length != 0) hash ^= UserSuppliedTag.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProducingFederate.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProducingFederate);
      }
      if (ObjectClassName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ObjectClassName);
      }
      if (InstanceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InstanceId);
      }
      if (UserSuppliedTag.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(UserSuppliedTag);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProducingFederate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProducingFederate);
      }
      if (ObjectClassName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ObjectClassName);
      }
      if (InstanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceId);
      }
      if (UserSuppliedTag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(UserSuppliedTag);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectDelete other) {
      if (other == null) {
        return;
      }
      if (other.ProducingFederate.Length != 0) {
        ProducingFederate = other.ProducingFederate;
      }
      if (other.ObjectClassName.Length != 0) {
        ObjectClassName = other.ObjectClassName;
      }
      if (other.InstanceId.Length != 0) {
        InstanceId = other.InstanceId;
      }
      if (other.UserSuppliedTag.Length != 0) {
        UserSuppliedTag = other.UserSuppliedTag;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProducingFederate = input.ReadString();
            break;
          }
          case 18: {
            ObjectClassName = input.ReadString();
            break;
          }
          case 26: {
            InstanceId = input.ReadString();
            break;
          }
          case 34: {
            UserSuppliedTag = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Interaction : pb::IMessage<Interaction> {
    private static readonly pb::MessageParser<Interaction> _parser = new pb::MessageParser<Interaction>(() => new Interaction());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Interaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Guard_Emulator.Hpsd081Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Interaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Interaction(Interaction other) : this() {
      producingFederate_ = other.producingFederate_;
      interactionClassName_ = other.interactionClassName_;
      parameters_ = other.parameters_.Clone();
      userSuppliedTag_ = other.userSuppliedTag_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Interaction Clone() {
      return new Interaction(this);
    }

    /// <summary>Field number for the "producing_federate" field.</summary>
    public const int ProducingFederateFieldNumber = 1;
    private string producingFederate_ = "";
    /// <summary>
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProducingFederate {
      get { return producingFederate_; }
      set {
        producingFederate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "interaction_class_name" field.</summary>
    public const int InteractionClassNameFieldNumber = 2;
    private string interactionClassName_ = "";
    /// <summary>
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InteractionClassName {
      get { return interactionClassName_; }
      set {
        interactionClassName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Guard_Emulator.NamedValue> _repeated_parameters_codec
        = pb::FieldCodec.ForMessage(26, global::Guard_Emulator.NamedValue.Parser);
    private readonly pbc::RepeatedField<global::Guard_Emulator.NamedValue> parameters_ = new pbc::RepeatedField<global::Guard_Emulator.NamedValue>();
    /// <summary>
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Guard_Emulator.NamedValue> Parameters {
      get { return parameters_; }
    }

    /// <summary>Field number for the "user_supplied_tag" field.</summary>
    public const int UserSuppliedTagFieldNumber = 4;
    private pb::ByteString userSuppliedTag_ = pb::ByteString.Empty;
    /// <summary>
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString UserSuppliedTag {
      get { return userSuppliedTag_; }
      set {
        userSuppliedTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Interaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Interaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProducingFederate != other.ProducingFederate) return false;
      if (InteractionClassName != other.InteractionClassName) return false;
      if(!parameters_.Equals(other.parameters_)) return false;
      if (UserSuppliedTag != other.UserSuppliedTag) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProducingFederate.Length != 0) hash ^= ProducingFederate.GetHashCode();
      if (InteractionClassName.Length != 0) hash ^= InteractionClassName.GetHashCode();
      hash ^= parameters_.GetHashCode();
      if (UserSuppliedTag.Length != 0) hash ^= UserSuppliedTag.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProducingFederate.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProducingFederate);
      }
      if (InteractionClassName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InteractionClassName);
      }
      parameters_.WriteTo(output, _repeated_parameters_codec);
      if (UserSuppliedTag.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(UserSuppliedTag);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProducingFederate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProducingFederate);
      }
      if (InteractionClassName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InteractionClassName);
      }
      size += parameters_.CalculateSize(_repeated_parameters_codec);
      if (UserSuppliedTag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(UserSuppliedTag);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Interaction other) {
      if (other == null) {
        return;
      }
      if (other.ProducingFederate.Length != 0) {
        ProducingFederate = other.ProducingFederate;
      }
      if (other.InteractionClassName.Length != 0) {
        InteractionClassName = other.InteractionClassName;
      }
      parameters_.Add(other.parameters_);
      if (other.UserSuppliedTag.Length != 0) {
        UserSuppliedTag = other.UserSuppliedTag;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProducingFederate = input.ReadString();
            break;
          }
          case 18: {
            InteractionClassName = input.ReadString();
            break;
          }
          case 26: {
            parameters_.AddEntriesFrom(input, _repeated_parameters_codec);
            break;
          }
          case 34: {
            UserSuppliedTag = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
